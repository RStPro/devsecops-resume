name: CI/CD with Security Scans

# Trigger workflow on push to main branch
on:
  push:
    branches:
      - main

jobs:
  # ────────────────────────────────────────────────
  # Static Code Analysis (SAST) — Python
  # ────────────────────────────────────────────────
  security:
    name: Run SAST Security Scans
    runs-on: ubuntu-latest

    steps:
      # Clone the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run Bandit (security vulnerabilities in code)
      - name: Run Bandit (Python security scan)
        run: bandit -r . -x venv

      # Run Safety (check for vulnerable packages)
      - name: Run Safety (vulnerable packages scan)
        run: safety check --full-report --ignore=51358

      # Run Flake8 (code linting)
      - name: Run Flake8 (code linting)
        run: flake8 .

  # ────────────────────────────────────────────────
  # Dynamic App Security Testing (DAST) — OWASP ZAP
  # ────────────────────────────────────────────────
  zapscan:  # ✅ No underscore in job ID
    name: Run OWASP ZAP DAST Scan
    runs-on: ubuntu-latest
    needs: security  # Only runs if security job passes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Run the ZAP Baseline scan against a deployed/staging URL
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: ${{ secrets.ZAP_SCAN_URL }}  # ✅ Add this secret in repo settings
          allow_issue_writing: false           # Prevents GitHub issues from being auto-created
          fail_action: false                   # Don't fail the pipeline on warnings
          artifact_name: zapscan               # ✅ Valid artifact name — no underscore
          docker_name: ghcr.io/zaproxy/zaproxy:stable
          issue_title: ZAP Scan Baseline Report
          cmd_options: >
            -J report_json.json
            -w report_md.md
            -r report_html.html
            -z "-config scanner.threadPerHost=3"

      # Show contents of ZAP output folder (debugging step)
      - name: Debug ZAP Output
        run: |
          echo "ZAP output directory contents:"
          ls -la

  # ────────────────────────────────────────────────
  # Deployment — Fly.io
  # ────────────────────────────────────────────────
  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [security]  # You can also add `zapscan` here if you want to deploy only after DAST scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Fly.io CLI
      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      # Deploy using Fly CLI
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}  # ✅ Add this secret in repo settings
