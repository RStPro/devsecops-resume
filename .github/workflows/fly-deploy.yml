name: CI/CD with Security Scans

on:
  push:
    branches:
      - main

jobs:
  # ────────────────────────────────
  # Static Analysis (SAST)
  # ────────────────────────────────
  security:
    name: Run SAST Security Scans
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Bandit (Python security scan)
        run: bandit -r . -x venv

      - name: Run Safety (vulnerable packages scan)
        run: safety check --full-report --ignore=51358

      - name: Run Flake8 (code linting)
        run: flake8 .

  # ────────────────────────────────
  # Dynamic Analysis (DAST) via ZAP Docker
  # ────────────────────────────────
  zapscan:
    name: Run OWASP ZAP DAST Scan (Manual)
    runs-on: ubuntu-latest
    needs: security

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull ZAP Docker Image
        run: docker pull ghcr.io/zaproxy/zaproxy:stable

      - name: Run ZAP Baseline Scan via Docker
        run: |
          mkdir -p zap-output
          docker run --rm \
            -v $(pwd)/zap-output:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t ${{ secrets.ZAP_SCAN_URL }} \
            -J report.json \
            -w report.md \
            -r report.html \
            -z "-config scanner.threadPerHost=3"

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zapscan  # ✅ valid artifact name
          path: zap-output/

  # ────────────────────────────────
  # Deploy to Fly.io
  # ────────────────────────────────
  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
